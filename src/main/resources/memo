@Test
    public void updateUserTest() throws Exception {
        deleteAll();
        User user = new User("helloworld5", "12345", "abc", "aaa@aaa.com", new Date(), "instagram", new Date());
        int rowCnt = insertUser(user);
        assertTrue(rowCnt == 1);

        int rowCnt2 = updateUser(user);
        assertTrue(rowCnt2 == 1);
    }

    public int updateUser(User user) throws Exception {
        Connection conn = ds.getConnection();
        String sql = "UPDATE user_info " +
                "SET pwd = ?, name=?, email=?, birth =?, sns=?, reg_date=? " +
                "WHERE id = ? ";

        PreparedStatement pstmt = conn.prepareStatement(sql);
        pstmt.setString(1, user.getPwd());
        pstmt.setString(2, user.getName());
        pstmt.setString(3, user.getEmail());
        pstmt.setDate(4, new java.sql.Date(user.getBirth().getTime()));
        pstmt.setString(5, user.getSns());
        pstmt.setTimestamp(6, new java.sql.Timestamp(user.getReg_date().getTime()));
        pstmt.setString(7, user.getId());

        return pstmt.executeUpdate();
    }

    package first.domain;

    public class PageHandler {
        private int totalCnt; // 총 개시물 갯수
        private int pageSize; // 한 페이지의 크기
        private int navSize = 10; // 페이지 내비게이션의 크기
        private int totalPage; // 전체 페이지의 갯수
        private int page; // 현재 페이지 , 어느 위치인지
        private int beginPage; // 내비게이션의 첫번째 페이지
        private int endPage; // 내비게이션의 마지막 페이지
        private boolean showPrev; // 이전 페이지로 이동하는 링크를 보여줄 것인지의 여부
        private boolean showNext; // 다음 페이지로 이동하는 링크르 ㄹ보여줄 것인지의 여부

        public PageHandler(int totalCnt, int page) {
            this(totalCnt, page, 10);
        }

        public PageHandler(int totalCnt, int page, int pageSize) {
            this.totalCnt = totalCnt;
            this.page = page;
            this.pageSize = pageSize;

            totalPage = (int) Math.ceil(totalCnt / (double) pageSize);  // totalCnt = 70, pageSize = 10
            beginPage = (page-1) / navSize * navSize +1;
            endPage = Math.min(beginPage + navSize -1, totalPage);

            showPrev = beginPage != 1;
            showNext = endPage != totalPage;

        }

        public void print() {
            System.out.println("page = " + page);
            System.out.print(showPrev ? "[PREV]" : "");
            for(int i = beginPage; i <= endPage; i++) {
                System.out.print(i + " ");
            }
            System.out.println(showNext ? "[NEXT]" : "");
        }

        public int getTotalCnt() {
            return totalCnt;
        }

        public void setTotalCnt(int totalCnt) {
            this.totalCnt = totalCnt;
        }

        public int getPageSize() {
            return pageSize;
        }

        public void setPageSize(int pageSize) {
            this.pageSize = pageSize;
        }

        public int getNavSize() {
            return navSize;
        }

        public void setNavSize(int navSize) {
            this.navSize = navSize;
        }

        public int getTotalPage() {
            return totalPage;
        }

        public void setTotalPage(int totalPage) {
            this.totalPage = totalPage;
        }

        public int getPage() {
            return page;
        }

        public void setPage(int page) {
            this.page = page;
        }

        public int getBeginPage() {
            return beginPage;
        }

        public void setBeginPage(int beginPage) {
            this.beginPage = beginPage;
        }

        public int getEndPage() {
            return endPage;
        }

        public void setEndPage(int endPage) {
            this.endPage = endPage;
        }

        public boolean isShowPrev() {
            return showPrev;
        }

        public void setShowPrev(boolean showPrev) {
            this.showPrev = showPrev;
        }

        public boolean isShowNext() {
            return showNext;
        }

        public void setShowNext(boolean showNext) {
            this.showNext = showNext;
        }

        @Override
        public String toString() {
            return "PageHandler{" +
                    "totalCnt=" + totalCnt +
                    ", pageSize=" + pageSize +
                    ", navSize=" + navSize +
                    ", totalPage=" + totalPage +
                    ", page=" + page +
                    ", beginPage=" + beginPage +
                    ", endPage=" + endPage +
                    ", showPrev=" + showPrev +
                    ", showNext=" + showNext +
                    '}';
        }
    }
